Filename: euler72.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
     5   39.867 MiB   39.867 MiB           1   @profile
     6                                         def gen_primes(n):
     7   39.867 MiB    0.000 MiB           1       l = range(2,n)
     8   39.867 MiB    0.000 MiB           1       primes = []
     9   39.867 MiB    0.000 MiB         999       for j in range(0,len(l)):
    10   39.867 MiB    0.000 MiB         998           p = True
    11   39.867 MiB    0.000 MiB        2968           for d in primes:
    12   39.867 MiB    0.000 MiB        2967               if(d > sqrt(l[j])):
    13   39.867 MiB    0.000 MiB         167                   break
    14   39.867 MiB    0.000 MiB        2800               if(l[j] % d == 0):
    15   39.867 MiB    0.000 MiB         830                   p = False
    16   39.867 MiB    0.000 MiB         830                   break;
    17   39.867 MiB    0.000 MiB         998           if(p):
    18   39.867 MiB    0.000 MiB         168               primes.append(l[j])
    19
    20   39.867 MiB    0.000 MiB           1       return primes


Filename: euler72.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    22   39.871 MiB 398671.066 MiB        9999   @profile
    23                                         def factorize(n,primes):
    24   39.871 MiB    0.000 MiB        9999       factors = []
    25   39.871 MiB    0.000 MiB        9999       init_n = n
    26   39.871 MiB    0.000 MiB       96347       for p in primes:
    27   39.871 MiB    0.000 MiB      118736           while(n%p == 0):
    28   39.871 MiB    0.000 MiB       22389               n = n/p
    29   39.871 MiB    0.000 MiB       22389               factors.append(p)
    30   39.871 MiB    0.000 MiB       96347           if(p > sqrt(n)):
    31   39.871 MiB    0.000 MiB        9999               break
    32   39.871 MiB    0.000 MiB        9999       if(n > 1):
    33   39.871 MiB    0.000 MiB        9596           factors.append(n)
    34   39.871 MiB    0.000 MiB        9999       return factors


Filename: euler72.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    51   39.871 MiB   39.871 MiB        9999   @profile
    52                                         def fast_phi(n,primes):
    53   39.871 MiB 398671.066 MiB        9999       factors = factorize(n,primes)
    54   39.871 MiB    0.000 MiB        9999       phi = factors[0]-1
    55   39.871 MiB    0.000 MiB       31985       for i in range(1,len(factors)):
    56   39.871 MiB    0.000 MiB       21986           if(factors[i] == factors[i-1]):
    57   39.871 MiB    0.000 MiB        7685               phi *= (factors[i]-1)*(factors[i])/(factors[i]-1)
    58                                                 else:
    59   39.871 MiB    0.000 MiB       14301               phi *= (factors[i]-1)
    60   39.871 MiB    0.000 MiB        9999       return phi